{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\nexport class ListCafe {\n  constructor() {\n    this.ShowContent = false;\n    this.ShowContentEvent = new EventEmitter();\n  }\n  displayItem(Show) {\n    this.ShowContentEvent.emit(this.ShowContent);\n    this.ShowContent = !this.ShowContent;\n  }\n}\nListCafe.ɵfac = function ListCafe_Factory(t) {\n  return new (t || ListCafe)();\n};\nListCafe.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListCafe,\n  selectors: [[\"app-listCafe\"]],\n  inputs: {\n    Dishes: \"Dishes\"\n  },\n  outputs: {\n    ShowContentEvent: \"ShowContentEvent\"\n  },\n  decls: 4,\n  vars: 4,\n  consts: [[1, \"row\", \"d-flex\", \"flex-row\", \"gap-4\", \"p-2\", \"rounded\", 3, \"ngStyle\", \"click\"], [1, \"d-flex\", \"flex-column\"], [1, \"fs-5\"]],\n  template: function ListCafe_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function ListCafe_Template_div_click_0_listener() {\n        return ctx.displayItem(ctx.ShowContent);\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"span\", 2);\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, ctx.ShowContent && ctx.Dishes.vegan ? \"rgb(155 235 156)\" : \"#CCC\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.Dishes.name);\n    }\n  },\n  dependencies: [i1.NgStyle],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAA0C,eAAe;;;;;;;;AAOzF,OAAM,MAAOC,QAAQ;EAJrBC;IAUE,gBAAW,GAAG,KAAK;IAEnB,qBAAgB,GAAG,IAAIF,YAAY,EAAW;;EAP9CG,WAAW,CAACC,IAAa;IACvB,IAAI,CAACC,gBAAgB,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAAC;IAC5C,IAAI,CAACA,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;;AAJWN,QAAQ;mBAARA,QAAQ;AAAA;AAARA,QAAQ;QAARA,QAAQ;EAAAO;EAAAC;IAAAC;EAAA;EAAAC;IAAAN;EAAA;EAAAO;EAAAC;EAAAC;EAAAC;IAAA;MCPrBC,8BAAmL;MAAhIA;QAAA,OAASC,gCAAwB;MAAA,EAAE;MACtFD,8BAAgC;MACXA,YAAiB;MAAAA,iBAAO;;;MAF0CA,uHAA2F;MAE7JA,eAAiB;MAAjBA,qCAAiB","names":["EventEmitter","ListCafe","constructor","displayItem","Show","ShowContentEvent","emit","ShowContent","selectors","inputs","Dishes","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Artem\\source\\repos\\AngularPraktik\\AngularPraktik\\ClientApp\\src\\app\\mycomponents\\listCafe\\listCafe.component.ts","C:\\Users\\Artem\\source\\repos\\AngularPraktik\\AngularPraktik\\ClientApp\\src\\app\\mycomponents\\listCafe\\listCafe.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core'\r\nimport { IMenuCafe } from '../../models/menuCafeInterface'\r\n\r\n@Component({\r\n  selector: 'app-listCafe',\r\n  templateUrl: './listCafe.component.html'\r\n})\r\nexport class ListCafe {\r\n  displayItem(Show: boolean): void {\r\n    this.ShowContentEvent.emit(this.ShowContent);\r\n    this.ShowContent = !this.ShowContent\r\n  }\r\n\r\n  ShowContent = false;\r\n  @Output()\r\n  ShowContentEvent = new EventEmitter<boolean>();\r\n\r\n  @Input()\r\n  Dishes!: IMenuCafe\r\n\r\n}\r\n\r\n","<div class=\"row d-flex flex-row gap-4 p-2 rounded\" (click)=\"displayItem(ShowContent);\" [ngStyle]=\"{'background-color': ShowContent && Dishes.vegan ? 'rgb(155 235 156)' : '#CCC'}\">\r\n<div class=\"d-flex flex-column\">\r\n  <span class=\"fs-5\">{{ Dishes.name }}</span>\r\n</div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}